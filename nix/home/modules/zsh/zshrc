setopt extendedglob
# NB: Home Manager does not offer an analog to its
# "programs.zsh.autocd" attribute for this, and oh-my-zsh enables this
# by default in its "lib/directories.zsh" file:
# https://github.com/ohmyzsh/ohmyzsh/blob/de1ca65dcaebd19f5ca6626616bb79b529362458/lib/directories.zsh#L3
unsetopt auto_pushd

# fzf configuration
export FZF_COMPLETION_TRIGGER='~~'

# See:
#   https://github.com/junegunn/fzf/issues/467#issuecomment-169695942.
#   https://github.com/junegunn/fzf/issues/477
#   https://github.com/junegunn/fzf/issues/2235
#   https://github.com/junegunn/fzf/pull/1492
# This is adapted from https://github.com/schmee/dotfiles/commit/acc7ba9eb0ea7795e9d502819cbcc36b80ae4889:
# It accepts CTRL-e to edit the selected item before submitting it.
fzf-conditional-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
  selected=( $(fc -rl 1 | perl -ne 'print if !$seen{(/^\s*[0-9]+\**\s+(.*)/, $1)}++' |
                 FZF_DEFAULT_OPTS="--height ${FZF_TMUX_HEIGHT:-40%} $FZF_DEFAULT_OPTS -n2..,.. --tiebreak=index --bind=ctrl-r:toggle-sort --expect=ctrl-e $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m" $(__fzfcmd)) )
  local ret=$?
  if [ -n "$selected" ]; then
    local accept=0
    if [[ $selected[1] = ctrl-e ]]; then
      accept=1
      shift selected
    fi
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
      [[ $accept = 0 ]] && zle accept-line
    fi
  fi
  zle reset-prompt
  return $ret
}
zle     -N   fzf-conditional-history-widget
bindkey '^R' fzf-conditional-history-widget

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'ranswer=$(dig -x {} +short); if [ -n "${ranswer}" ]; then echo "${ranswer}"; else dig +noall +answer +nottlid +noclass {}; fi' ;;
    *)            fzf "$@" ;;
  esac
}

# To customize the  prompt, run `p10k configure` or edit ~/.p10k.zsh.
if [ -f ~/.p10k.zsh ]; then
  source ~/.p10k.zsh
fi

# Other programs

# Work around the zsh completion command for the "aws" tool not being
# amenable to "autoload", per
# https://github.com/NixOS/nixpkgs/issues/275770:
if command -v aws > /dev/null 2>&1; then
  for p in ${(ps. .)NIX_PROFILES}; do
    f="${p}/share/zsh/site-functions/_aws"
    if [ -r "${f}" ]; then
      source "${f}"
      break
    fi
  done
fi
