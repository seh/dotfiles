# See the following GitHub issues and discussions for the motivation for this program:
# - https://github.com/jj-vcs/jj/issues/6540
# - https://github.com/magit/magit/discussions/5372

set -e -u -o pipefail

function usage() {
  printf "usage: %s [-h] description_file\n" "$(basename "${0}")" 1>&2
  exit 2
}

function parse_args() {
  while getopts h name
  do
    case "${name}" in
      h) usage;;
      ?) usage;;
    esac
  done
}

parse_args "$@"
shift $((OPTIND - 1))

if (( $# != 1 )); then
  printf "%s: expected one argument\n" "$(basename "${0}")" 1>&2
  exit 2
fi
target_file="$1"
shift
if [ -z "${target_file}" ]; then
    printf "%s: description file must not be empty\n" "$(basename "${0}")" 1>&2
    exit 2
fi

workspace_repo_dir="$(jj workspace root)/.jj/repo"
if [ -f "${workspace_repo_dir}" ]; then
  # We're in a non-initial Jujutsu workspace, where instead of there
  # being a directory with the expected path, there's a regular file
  # whose content points back to the repository's initial workspace.
  workspace_repo_dir="$(cat "${workspace_repo_dir}")"
elif ! [ -e "${workspace_repo_dir}" ]; then
  echo >&2 "Jujutsu workspace repository directory ${workspace_repo_dir} does not exist."
  exit 1
elif ! [ -d "${workspace_repo_dir}" ]; then
  echo >&2 "Jujutsu workspace repository directory entry ${workspace_repo_dir} is not a directory."
  exit 1
fi

target_file_basename="$(basename "${target_file}")"
# Ensure that the file name that Emacs sees ends with a sentinel
# extension in order to activate magit's "git-commit-mode"
# automatically, per the "git-commit-filename-regexp" Emacs variable.
if [[ ! "${target_file_basename}" =~ .+\.jjdescription$ ]]; then
  target_file_basename+=".jjdescription"
fi

link_path="${workspace_repo_dir}/${target_file_basename}"
ln -s "${target_file}" "${link_path}"
trap 'rm -rf "${link_path}"' EXIT

emacsclient "${link_path}"
